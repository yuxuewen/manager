<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.tiny.mbg.mapper.ScTeacherMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.tiny.mbg.model.ScTeacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="worker_num" jdbcType="VARCHAR" property="workerNum" />
    <id column="id_card" jdbcType="CHAR" property="idCard" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="org_ids" jdbcType="VARCHAR" property="orgIds" />
    <result column="role_ids" jdbcType="VARCHAR" property="roleIds" />
    <result column="gender" jdbcType="BIT" property="gender" />
    <result column="birthday" jdbcType="INTEGER" property="birthday" />
    <result column="address" jdbcType="CHAR" property="address" />
    <result column="tel" jdbcType="CHAR" property="tel" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, worker_num, id_card, password, username, org_ids, role_ids, gender, birthday, 
    address, tel, mobile, email, state, create_time, update_time, delete_flag
  </sql>
  <select id="selectByExample" parameterType="com.macro.mall.tiny.mbg.model.ScTeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sc_teacher
    where id = #{id,jdbcType=INTEGER} and delete_flag=0

  </select>

  <select id="selectTeacher" parameterType="com.macro.mall.tiny.dto.SearchTeacher" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sc_teacher
    where   delete_flag=0
    <if test="workerNum != null">
      and worker_num = #{workerNum,jdbcType=VARCHAR}
    </if>
    <if test="userName != null">
      and username   LIKE CONCAT('%',#{userName},'%')
    </if>
    <if test="roleId != null">
      and FIND_IN_SET(#{roleId,jdbcType=VARCHAR},role_ids)
    </if>
    <if test="orgId != null">
      and FIND_IN_SET(#{orgId,jdbcType=VARCHAR},org_ids)
    </if>

  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    update  sc_teacher set delete_flag=1
    where id = #{id,jdbcType=INTEGER} and delete_flag=0

  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.tiny.mbg.model.ScTeacherExample">
    delete from sc_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.tiny.mbg.model.ScTeacher">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sc_teacher (worker_num, id_card, password, 
      username, org_ids, role_ids, 
      gender, birthday, address, 
      tel, mobile, email, state, 
      create_time, update_time
      )
    values (#{workerNum,jdbcType=VARCHAR}, #{idCard,jdbcType=CHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=CHAR}, #{orgIds,jdbcType=VARCHAR}, #{roleIds,jdbcType=VARCHAR}, 
      #{gender,jdbcType=BIT}, #{birthday,jdbcType=INTEGER}, #{address,jdbcType=CHAR}, 
      #{tel,jdbcType=CHAR}, #{mobile,jdbcType=CHAR}, #{email,jdbcType=CHAR}, #{state,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.macro.mall.tiny.mbg.model.ScTeacher">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sc_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workerNum != null">
        worker_num,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="orgIds != null">
        org_ids,
      </if>
      <if test="roleIds != null">
        role_ids,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workerNum != null">
        #{workerNum,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="orgIds != null">
        #{orgIds,jdbcType=VARCHAR},
      </if>
      <if test="roleIds != null">
        #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.tiny.mbg.model.ScTeacherExample" resultType="java.lang.Integer">
    select count(*) from sc_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sc_teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.workerNum != null">
        worker_num = #{record.workerNum,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=CHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=CHAR},
      </if>
      <if test="record.orgIds != null">
        org_ids = #{record.orgIds,jdbcType=VARCHAR},
      </if>
      <if test="record.roleIds != null">
        role_ids = #{record.roleIds,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=BIT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=CHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=CHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sc_teacher
    set id = #{record.id,jdbcType=INTEGER},
      worker_num = #{record.workerNum,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=CHAR},
      password = #{record.password,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=CHAR},
      org_ids = #{record.orgIds,jdbcType=VARCHAR},
      role_ids = #{record.roleIds,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=BIT},
      birthday = #{record.birthday,jdbcType=INTEGER},
      address = #{record.address,jdbcType=CHAR},
      tel = #{record.tel,jdbcType=CHAR},
      mobile = #{record.mobile,jdbcType=CHAR},
      email = #{record.email,jdbcType=CHAR},
      state = #{record.state,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},

    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.macro.mall.tiny.mbg.model.ScTeacher">
    update sc_teacher
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="orgIds != null">
        org_ids = #{orgIds,jdbcType=VARCHAR},
      </if>
      <if test="roleIds != null">
        role_ids = #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=CHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>

    </set>
    where id = #{id,jdbcType=INTEGER}
      and worker_num = #{workerNum,jdbcType=VARCHAR}
      and id_card = #{idCard,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.tiny.mbg.model.ScTeacher">
    update sc_teacher
    set password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=CHAR},
      org_ids = #{orgIds,jdbcType=VARCHAR},
      role_ids = #{roleIds,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      birthday = #{birthday,jdbcType=INTEGER},
      address = #{address,jdbcType=CHAR},
      tel = #{tel,jdbcType=CHAR},
      mobile = #{mobile,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      state = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}

    where id = #{id,jdbcType=INTEGER}
      and worker_num = #{workerNum,jdbcType=VARCHAR}
      and id_card = #{idCard,jdbcType=CHAR}
  </update>

  <insert id="insertTeacherSubject" parameterType="java.util.List">
    insert into sc_teacher_subject(
    teacher_id,
    subject_id
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.teacherId},
      #{item.subjectId}
      )
    </foreach>
  </insert>

  <delete id="deleteTeacherSubject" parameterType="map">
    delete from sc_teacher_subject
    where teacher_id = #{id,jdbcType=INTEGER}

  </delete>

</mapper>