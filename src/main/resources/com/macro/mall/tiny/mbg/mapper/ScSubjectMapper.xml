<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.tiny.mbg.mapper.ScSubjectMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.tiny.mbg.model.ScSubject">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="subject_code" jdbcType="VARCHAR" property="subjectCode" />
    <result column="subject_name" jdbcType="CHAR" property="subjectName" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="is_enable" jdbcType="BIT" property="isEnable" />
    <result column="sort" jdbcType="TINYINT" property="sort" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.macro.mall.tiny.mbg.model.ScSubject">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, subject_code, subject_name, dept_id, is_enable, sort, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.macro.mall.tiny.mbg.model.ScSubjectExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sc_subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.macro.mall.tiny.mbg.model.ScSubjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sc_subject
    where id = #{id,jdbcType=INTEGER} and delete_flag=0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update  sc_subject set delete_flag=1
    where id = #{id,jdbcType=INTEGER} and delete_flag=0
  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.tiny.mbg.model.ScSubjectExample">
    delete from sc_subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.tiny.mbg.model.ScSubject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sc_subject (subject_code, subject_name, dept_id, 
      is_enable, sort, create_time, 
      update_time, remark)
    values (#{subjectCode,jdbcType=VARCHAR}, #{subjectName,jdbcType=CHAR}, #{deptId,jdbcType=VARCHAR}, 
      #{isEnable,jdbcType=BIT}, #{sort,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.macro.mall.tiny.mbg.model.ScSubject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sc_subject
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subjectCode != null">
        subject_code,
      </if>
      <if test="subjectName != null">
        subject_name,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subjectCode != null">
        #{subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="subjectName != null">
        #{subjectName,jdbcType=CHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.tiny.mbg.model.ScSubjectExample" resultType="java.lang.Integer">
    select count(*) from sc_subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sc_subject
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subjectCode != null">
        subject_code = #{record.subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectName != null">
        subject_name = #{record.subjectName,jdbcType=CHAR},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=BIT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sc_subject
    set id = #{record.id,jdbcType=INTEGER},
      subject_code = #{record.subjectCode,jdbcType=VARCHAR},
      subject_name = #{record.subjectName,jdbcType=CHAR},
      dept_id = #{record.deptId,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=BIT},
      sort = #{record.sort,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sc_subject
    set id = #{record.id,jdbcType=INTEGER},
      subject_code = #{record.subjectCode,jdbcType=VARCHAR},
      subject_name = #{record.subjectName,jdbcType=CHAR},
      dept_id = #{record.deptId,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=BIT},
      sort = #{record.sort,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.macro.mall.tiny.mbg.model.ScSubject">
    update sc_subject
    <set>
      <if test="subjectCode != null">
        subject_code = #{subjectCode,jdbcType=VARCHAR},
      </if>
      <if test="subjectName != null">
        subject_name = #{subjectName,jdbcType=CHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and delete_flag=0
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.macro.mall.tiny.mbg.model.ScSubject">
    update sc_subject
    set subject_code = #{subjectCode,jdbcType=VARCHAR},
      subject_name = #{subjectName,jdbcType=CHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=BIT},
      sort = #{sort,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}  and delete_flag=0
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.tiny.mbg.model.ScSubject">
    update sc_subject
    set subject_code = #{subjectCode,jdbcType=VARCHAR},
      subject_name = #{subjectName,jdbcType=CHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=BIT},
      sort = #{sort,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}  and delete_flag=0
  </update>
</mapper>